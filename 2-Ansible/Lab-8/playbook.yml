---
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    key_name: ivolve_key
    region: us-east-1
    image: ami-05ffe3c48a9991133
    instance_type: t2.micro       
    sec_group: "sg_ivolve"
  tasks:
    - name: Provisioning EC2 instance
      block:

      - name: Create security group
        amazon.aws.ec2_security_group:
          name: "{{ sec_group }}"
          description: "Security group for my instance"
          region: "{{ region }}"
          aws_access_key: "{{access_key}}"  
          aws_secret_key: "{{secret_key}}"  
          rules:                                
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
              rule_desc: allow http access

      - name: Create and save Key Pair
        block:
          - name: Create a new Ec2 key
            amazon.aws.ec2_key:
              name: "{{ key_name }}"
              region: "{{ region }}"
              aws_access_key: "{{access_key}}"  
              aws_secret_key: "{{secret_key}}"  
            register: ec2_key_result
            no_log: true
          - name: Save priv key
            copy:
              content: "{{ ec2_key_result.key.private_key  }}"
              dest: "/home/kira/.ssh/{{ key_name }}.pem"
              mode: '0600'
            when:
              - ec2_key_result.changed



      - name: Start an instance with a public IP address
        amazon.aws.ec2_instance:
          name: "ivolve"
          key_name: "{{ key_name }}"
          instance_type: "{{ instance_type }}"
          security_group: "{{ sec_group }}"
          aws_access_key: "{{ access_key }}"
          aws_secret_key: "{{ secret_key }}"
          region: "{{ region }}"
          network:
            assign_public_ip: true
          image_id: "{{ image }}"
          tags:
            Environment: Production
          wait: yes  # Wait for instance to reach running state
          wait_timeout: 600
        register: ec2_result

      - name: Wait for SSH to come up
        ansible.builtin.wait_for:
          host: "{{ ec2_result.instances[0].public_dns_name }}"
          port: 22
          delay: 10
          timeout: 300  
        when: ec2_result.instances[0].public_dns_name is defined

      - name: Get instances facts
        amazon.aws.ec2_instance_info:
          region: "{{ region }}"
          filters:
            "tag:Name": ivolve
        register: result
        until: result.instances | length > 0
        retries: 12
        delay: 10

      - name: Display instance information
        debug:
          msg: |
            ID: {{ item.instance_id }}
            State: {{ item.state.name }}
            Public DNS: {{ item.public_dns_name }}
            IP: {{ item.public_ip_address }}
        loop: "{{ result.instances }}"
        loop_control:
          label: "{{ item.instance_id }}"
